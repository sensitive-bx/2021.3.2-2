练习案例２：点和圆的关系
设计一个圆类（Ｃｉｒｃｌｅ）和一个点类（Ｐｏｉｎｔ），计算点和圆的关系。
#include<iostream>
using namespace std;
class Point 
{
//行为：
public:
    //设置X
	void SetX(int x)
	{
		X = x;
	}
	//获取X
	int GetX()
	{
		return X;
	}
	//设置Y
	void SetY(int y)
	{
		Y = y;
	}
	//获取Y
	int GetY()
	{
		return Y;
	} 
//属性： 
private:
	int X;
	int Y;
};

class Circle
{
public:
	//设置半径
	void SetR(int r)
	{
		R = r;
	 } 
	//获取半径
	int GetR()
	{
		return R;
	 } 
	//设置圆心
	void SetCenter(Point center)
	{
		Center = center;
	 } 
	Point GetCenter()
	{
		return Center;
	}
private:
	int R;  //半径
	Point Center;  //圆心 
};
//判断点和圆的关系
void isincircle(Circle &c, Point &p)
{
	//计算两点之间距离 平方
	int distance =
	(c.GetCenter().GetX() - p.GetX())*(c.GetCenter().GetX() - p.GetX()) + 
	(c.GetCenter().GetY() - p.GetY())*(c.GetCenter().GetY() - p.GetY());
	//计算半径的平方
	int Rdistance = c.GetR() * c.GetR() ;
	//判断关系
	if(distance == Rdistance)
	{
	    cout << "点在圆上" << endl;	
	} 
	else if(distance < Rdistance)
	{
		cout << "点在圆内" << endl;
	}
	else
	{
		cout << "点在圆外" << endl;
	}
}
int main()
{
	//创建圆 
	Circle c;
	c.SetR(10);
	Point Center;
	Center.SetX(10);
	Center.SetY(0);  
	c.SetCenter(Center); 
	//创建点
	Point p;
	p.SetX(10);
	p.SetY(10);
	//判断关系
	isincircle(c,p);   
	system("pause");
}